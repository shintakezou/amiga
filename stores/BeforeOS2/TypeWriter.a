; Esempio su come usare l'input.device

		incdir	"dh0:progr/assem/include/"
		include	"exec/types.i"
		include	"devices/input.i"
		include	"devices/inputevent.i"
		include	"exec/exec_lib.i"
		include	"exec/nodes.i"
		include	"exec/ports.i"
		include	"exec/devices.i"
		include	"exec/io.i"
		include	"exec/memory.i"
		include	"libraries/dosextens.i"
		include	"exec/interrupts.i"

CALL		MACRO
		jsr	_LVO\1(a6)
		ENDM


		move.l	4.w,a6			; senza preamboli!
		suba.l	a1,a1
		CALL	FindTask		; cerchiamoci
		move.l	d0,a4
		lea	pr_MsgPort(a4),a3
		lea	inputblock(pc),a2
		move.b	#NT_MESSAGE,LN_TYPE(a2)
		move.w	#IOSTD_SIZE,MN_LENGTH(a2)
		move.l	a3,MN_REPLYPORT(a2)
		lea	inputname(pc),a0
		moveq	#0,d0
		moveq	#0,d1
		move.l	a2,a1
		CALL	OpenDevice
		tst.l	d0
		bne	nodevice

		move.l	#code_size,d0
		move.l	#MEMF_PUBLIC,d1
		move.l	d0,d6
		CALL	AllocMem
		move.l	d0,a5
		tst.l	d0
		beq	nomem
		move.l	d0,a1
		lea	handler(pc),a0
		subq.l	#1,d6
coploop		move.b	(a0)+,(a1)+
		dbf	d6,coploop

		move.l	a5,a0
		move.b	#51,LN_PRI(a0)			; prima io che in-
		move.l	a5,IS_DATA(a0)			; tuition!
		move.l	a0,a1
		add.l	#IS_SIZE,a0
		move.l	a0,IS_CODE(a1)
		move.l	a2,a1
		move.l	a5,IO_DATA(a1)
		move.w	#IND_ADDHANDLER,IO_COMMAND(a1)
		CALL	DoIO

nomem		move.l	a2,a1
		CALL	CloseDevice

nodevice	rts


inputname	dc.b	"input.device",0
		even
inputblock	ds.b	IOSTD_SIZE
		even



handler		ds.b	IS_SIZE
		even

myhandler	movem.l	d0-d7/a0-a6,-(sp)
handloop	cmp.b	#IECLASS_RAWKEY,ie_Class(a0)
		beq.s	keypressed
handret		movem.l	(sp)+,d0-d7/a0-a6
		rts

keypressed	move.w	ie_Qualifier(a0),d0
		and.w	#IEQUALIFIER_CAPSLOCK,d0
		beq.s	handret
		or.w	#IEQUALIFIER_LSHIFT,ie_Qualifier(a0)
		bra.s	handret

code_size	EQU	*-handler


		END